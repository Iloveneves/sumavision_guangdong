/*******************************************************************************
File name   : rocme_porting_file.h

Author		: XXX			

Description : The poriting interface & macro definition for FILE module.
	          
Copyright (C) BeiJing SUMAVision, Inc., 2009 .All rights reserved.

History		:
				2009.12.20  		Created 					
*******************************************************************************/
#ifndef _ROCME_PORTING_LOCALFILE_H_
#define _ROCME_PORTING_LOCALFILE_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "rocme_porting_typedef.h"

#ifndef time_t
#define time_t 	unsigned int
#endif

/*++++++++++++++++++++++++++++     DEFINES     ++++++++++++++++++++++++++++*/

#define ROC_FILE_NAME_LEN_MAX (64) /*vfs can surpport less than 256*/

/* Local definition for file system */
/* -------------------------------- */
typedef enum Roc_FileSystem_
{
 ROC_FS_NONE,
 ROC_FS_VFS,
 ROC_FS_LOCAL,
 ROC_FS_HTTP
} Roc_FileSystem_e;


typedef enum Roc_File_Mode
{
    ROC_FILE_MODE_R = 0x01,
    ROC_FILE_MODE_W = 0x02,
    ROC_FILE_MODE_RW = 0x03,
    ROC_FILE_MODE_DIR = 0x04 /*It is a dir*/
}Roc_File_Mode_e;

typedef struct Roc_File_Status 
{
  Roc_File_Mode_e  file_mode;     /* mode */
  UINT32_T        file_size;     /* total size, in bytes */
  UINT32_T        file_blksize;  /* blocksize for filesystem I/O */
  time_t        file_atime;    /* time of last access */
  time_t        file_mtime;    /* time of last modification */
  time_t        file_ctime;    /* time of last status change */
} Roc_File_Status_t;

/*目录下某个文件或文件夹的描述结构体，采用链表形式*/
typedef struct Roc_File_List 
{
     CHAR_T filename[ROC_FILE_NAME_LEN_MAX];  //每个文件的名字不超过256个字符
     Roc_File_Mode_e filemode;               //文件属性,标示是否可读/写,是子文件夹还是文件
     struct Roc_File_List  *nextfile;                //下一个文件 
}Roc_File_List_t;

/*目录的句柄中增加了描述该目录下的文件描述链表指针*/
typedef struct Roc_Dir_Handle
{
    Roc_FileSystem_e  FileSystem;
    void             *FileHandle;
    Roc_File_List_t * filelisthead;
}Roc_Dir_Handle_t;


/*++++++++++++++++++++++++++++    FUNCTIONS    ++++++++++++++++++++++++++++*/
/***************************************************************************
功能说明：
    打开指定文件。
参数说明：
    输入参数：
    [      filename]文件名
    [          mode]打开模式
    输出参数：
        无.
返    回： 
    成功 : 文件句柄
    失败 : -1

注：打开模式
"rb": 读模式，如果要打开的文件已存在，则打开成功，否则打开文件失败。
"wb": 写模式，如果要打开的文件已存在，则丢弃原来的内容，否则根据filename创建出一个内容为空的文件；如果路径中存在有目录未创建，则依次创建这些目录。

参考实现：
        rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_open(const CHAR_T *filename, const CHAR_T *mode);

/***************************************************************************
功能说明：
    关闭指定文件.
参数说明：
    输入参数：
    [             fd]文件句柄
    输出参数：
       无
返    回： 
    成功 : 0            
    失败 : -1
    	
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_close(INT32_T fd);

/***************************************************************************
功能说明：
    读取指定文件的数据，通过buffer传送给调用者，读取长度为nbytes
参数说明：
    输入参数：
		[              fd] 文件句柄
		[          buffer] 返回的数据指针，此内存由调用者申请
		[          nbytes] 需要读取的字节数


    输出参数：无
返    回： 
    成功：实际读取到的文件长度（Byte）,0或小于nbytes，表示到文件结尾了。
	失败：-1
注意：成功返回值等于nbytes

参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_read(INT32_T fd, CHAR_T* buffer, INT32_T nbytes);

/***************************************************************************
功能说明：
		将buffer中的数据写入到指定的文件中，写入长度为nbytes
参数说明：
    输入参数：
    [              fd] 文件句柄
		[          buffer] 写入的数据所在内存地址
		[          nbytes] 需要写入的字节数

    输出参数：无
返    回： 
    成功：实际写入的字节数
	失败：0
注意：成功返回值等于nbytes。

参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_write(INT32_T fd, const INT8_T* buffer, INT32_T nbytes);

/***************************************************************************
功能说明：
    定位指定文件到指定位置,位置由off和origin指定.
参数说明：
    输入参数：
    [              fd] 文件句柄
		[             off] 要偏移的字节数
		[          origin] 偏移的起始位置,
		                   0表示从文件头部偏移off个字节,
		                   1表示从文件当前位置偏移off个字节,
		                   2表示从文件尾部偏移off个字节
    输出参数：
返    回： 
    成功 : 0        
    失败 : -1
注意：origin=0时,要求off>0; orgin=2时,要求off<0;

参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_seek(INT32_T fd, INT32_T off, INT32_T origin);

/***************************************************************************
功能说明：
得到文件当前位置相对于文件首的偏移字节数.
参数说明：
输入参数：
[              fd] 文件句柄
输出参数：
返    回： 
    成功: 置相对于文件首的偏移字节数.
    失败: -1
参考实现：
rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_tell(INT32_T fd);

/***************************************************************************
功能说明：
判断当前文件指针是否到达文件结尾.
参数说明：
输入参数：
[              fd] 文件句柄
输出参数：
返    回： 
    成功: 指针已经到达文件结尾，返回0；否则，返回指针实际位置。
    失败: 文件未打开等时返回-1
参考实现：
rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_eof(INT32_T fd);

/***************************************************************************
功能说明：
		判断指定文件是否存在
参数说明：
    输入参数：
    [        filename] 文件名	
    输出参数：无
返    回： 
    存在   : 1
    不存在 : 0
    	
参考实现：
    rocme_file.c
***************************************************************************/
ROC_BOOL rocme_porting_file_is_exist(const CHAR_T *filename);

/***************************************************************************
功能说明：
    给指定的文件重命名
参数说明：
    输入参数：
    [        filename] 原始文件名
    [         newname] 新文件名	
    输出参数：无
返    回： 
    成功 : 0           
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_rename(const CHAR_T* filename, const CHAR_T* newname);

/***************************************************************************
功能说明：
    删除指定的文件
参数说明：
    输入参数：
    [        filename] 文件名称
    输出参数：
返    回： 
    成功 : 0
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_delete(const CHAR_T* filename);

/***************************************************************************
功能说明：
		获取指定文件的状态属性
参数说明：
    输入参数：
    [              fd] 文件句柄
    输出参数：
    [        filestatus] 文件的状态数据结构
返    回： 
    成功 : 0
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_file_get_status(const CHAR_T* filename, Roc_File_Status_t *filestatus);


/***************************************************************************
功能说明：
		打开指定的文件目录
参数说明：
    输入参数：
    [            path] 目录名称，指定目录，不带驱动器符，后缀可带/，绝对路径
    输出参数：无
返    回： 
    成功 : 目录句柄
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_dir_open(const CHAR_T *path);


/***************************************************************************
功能说明：
		关闭指定的文件目录
参数说明：
    输入参数：
    [            fd] 目录句柄
    输出参数：无
返    回： 
    成功 : 0
    失败 : -1
注 :
    删除文件描述链表中每个节点并释放内存
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_dir_close(INT32_T dd);


/***************************************************************************
功能说明：
		读取指定的文件目录信息
参数说明：
    输入参数：
    [             dd] 目录句柄
    [       filelist]目录下文件描述链表的指针
返    回： 
    成功 : 0
    失败 : -1
注 :
    创建文件描述链表中每个节点并分配内存
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_dir_read(INT32_T dd, Roc_File_List_t **filelist);


/***************************************************************************
功能说明：
		创建指定的文件目录，需要指定绝对路径，如果路径中存在多级目录未创建，则依次创建。
参数说明：
    输入参数：
    [            dir] 目录文件
    输出参数：无
返    回： 
    成功 : 0
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_dir_mkdir(CHAR_T *dir);


/***************************************************************************
功能说明：
    判断指定的文件目录是否存在
参数说明：
    输入参数：
    [         dirname] 目录文件名称
    输出参数：无
返    回： 
    存在   : 1
    不存在 : 0
参考实现：
    rocme_file.c
***************************************************************************/
ROC_BOOL rocme_porting_dir_is_exist(const CHAR_T *dirname);


/***************************************************************************
功能说明：
		重命名指定的文件目录为newname
参数说明：
    输入参数：
    [         dirname] 目录名称
    [         newname] 新的目录名称
    输出参数：无
返    回： 
    成功 : 0            
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_dir_rename(const CHAR_T* dirname, const CHAR_T* newname);


/***************************************************************************
功能说明：
    删除指定目录
参数说明：
    输入参数：
    [         dirname] 目录名称
    输出参数：无
返    回： 
    成功 : 0           
    失败 : -1
参考实现：
    rocme_file.c
***************************************************************************/
INT32_T rocme_porting_dir_delete(const CHAR_T* dirname);


/***************************************************************************
功能说明：
    获取指定编号的flash可写目录，该目录存在于flash上，
    断电后数据不会丢失。
参数说明：
    输入参数：
    [         index]可写目录编号
    [         name]可写目录的绝对路径
    输出参数：无
返    回： 
    成功 : 0           
    失败 : -1
备注：
    对应用来说，只能访问及修改指定目录下的文件或文件夹，
    该目录存在于flash上，断电后数据不会丢失。
    这种目录至少需要提供一个，一般也只需要一个，根据实际
    的需求编号由0开始依次递增，中间首先会获取index为0的可写目录。
***************************************************************************/
INT32_T rocme_porting_get_local_dir(INT32_T index, CHAR_T* name);


/***************************************************************************
功能说明：
    获取临时文件系统中的 可写目录，该目录存在于内存中，
    断电后数据可以丢失。
参数说明：
    输入参数：
    [         name]临时文件系统中可写目录的绝对路径
    输出参数：无
返    回： 
    成功 : 0           
    失败 : -1
备注：
    对中间件来说，某些操作需要一个临时文件夹，
    在启动运行的过程中，该文件夹可以正常读写访问，
    不会丢失，断电后内容则被清空。
    这个临时文件夹不须要保存在flash上，例如内存文件系统。
***************************************************************************/
INT32_T rocme_porting_get_tmp_dir(CHAR_T* name);


#ifdef __cplusplus
}
#endif

#endif
