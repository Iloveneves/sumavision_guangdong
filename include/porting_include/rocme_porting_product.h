/*******************************************************************************
Copyright (C) BeiJing SUMAVision, Inc., 2009-2011 .All rights reserved.

File name   : rocme_porting_product.h

Author      : DSM

Description : The poriting interface & macro definition for PRODUCT module.

History     :
              2009.12.20          Created         Jason
              2010.01.10          Modified        DSM
*******************************************************************************/
#ifndef _ROCME_PORTING_PRODUCT_H_
#define _ROCME_PORTING_PRODUCT_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "rocme_porting_typedef.h"
#include "rocme_porting_product.h"


/*++++++++++++++++++++++++++++     DEFINES     ++++++++++++++++++++++++++++*/
/*芯片类型*/
/* added by Jason wu 2010.8.20 */
typedef enum Roc_CHIP_TYPE
{
    ROC_CHIP_ST_5105    = 0x00, 
    ROC_CHIP_ST_5197    = 0x01, 
    ROC_CHIP_ST_7105    = 0x02, 
    ROC_CHIP_ST_7162    = 0x03, 
    ROC_CHIP_ST_7167    = 0x04, 
    ROC_CHIP_ST_7141    = 0x05, 
    ROC_CHIP_ST_7108    = 0x06,

    ROC_CHIP_BCM_7403   = 0x100,
    ROC_CHIP_BCM_7405   = 0x101,
    ROC_CHIP_BCM_7413   = 0x102,
    ROC_CHIP_BCM_7019   = 0x103,

    ROC_CHIP_HISI_3110E = 0x200,

    ROC_CHIP_NEC_61325  = 0x300
}Roc_CHIP_TYPE_e;

/*DHCP模式*/
typedef enum Roc_DHCP_Mode
{
    ROC_NO_DHCP     = 0x00,   /*中间件不使用DHCP*/
       ROC_USED_DHCP   = 0x01,  /*中间件使用DHCP  */
}Roc_DHCP_Mode_e;

/*rocme_porting_adsl_setup()使用*/
typedef enum Roc_FireWall
{
    ROC_FIREWALL_NONE       = 0,
    ROC_FIREWALL_STANDALONE = 1,
    ROC_MASQUERADE          = 2
}Roc_FireWall_e;

/*rocme_porting_adsl_setup()使用*/
typedef struct Roc_PPPoE_Config
{
    INT8_T          usr_name[36];   //用户名,必须,例如"sumavision"
    INT8_T          dev_name[36];   //网卡设备名,一般为"eth0"
    INT32_T         demand_value;   //空闲计时时间,-1代表永远不自动断开
    INT8_T          dns_ser1[16];   //dns1服务器地址,格式"xxx.xxx.xxx.xxx"
    INT8_T          dns_ser2[16];   //dns2服务器地址,格式"xxx.xxx.xxx.xxx"
    INT8_T          password[64];   //密码,必须,例如"123456"
    Roc_FireWall_e  firewall;       //一般情况下请使用 ROC_FIREWALL_NONE
}Roc_PPPoE_Config_t;

/*++++++++++++++++++++++++++++    FUNCTIONS    ++++++++++++++++++++++++++++*/


/**************************************************************************
函数名称: 
            rocme_porting_net_init
功能说明: 
            网络设备初始化，中间件会在启动时调用此函数，若在启动中间件之前
        机顶盒已经做好了网络设备的初始化，此函数可以实现为仅重新设定IP、mask
        和gateway。
            要求:字符串形式为"192.125.001.090"或者"192.125.1.90"都可以正确识别。
参数说明：
    输入参数：
            [ *deviceName]:设备名字
            [ *ip       ] : IP字符串头指针，字符串长度为16*sizeof(CHAR_T)
            [ *mask     ] : 子网掩码字符串头指针，字符串长度为16*sizeof(CHAR_T)
            [ *gateway  ] : 网关字符串头指针，字符串长度为16*sizeof(CHAR_T)
    输出参数：
            无
返    回： 
    成功 : 0            ( 初始化成功 )
    失败 : -1 或 错误码 ( 初始化失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_net_device_init(const CHAR_T* deviceName);

INT32_T rocme_porting_net_init(const CHAR_T* deviceName, const CHAR_T *ip,const CHAR_T *mask,const CHAR_T *gateway);

/**************************************************************************
函数名称: 
            rocme_porting_net_reset
功能说明: 
    当设定的IP mask 和 gateway 发生变化后，调用此函数使其生效。
参数说明：
    输入参数：
            无
    输出参数：
            无
返    回： 
			     无
修改记录：
**************************************************************************/
void rocme_porting_net_reset(void);

/**************************************************************************
函数名称: 
            rocme_porting_check_netcon_status
功能说明: 
            判断网络物理连接状态。
参数说明：
    输入参数：
            [ *deviceName]:设备名字
    输出参数：
            无
返    回： 
    ROC_TRUE  ：网络连接正常
    ROC_FALSE ：网络连接已经断开 / 查询失败
修改记录：
**************************************************************************/
ROC_BOOL rocme_porting_check_netcon_status(const CHAR_T* deviceName);

/**************************************************************************
函数名称: 
            rocme_porting_set_IP
功能说明: 
            设置当前网络终端设备的IP地址字符串，符合点型"." 地址标准，如
        192.168.123.125等。
        要求:字符串形式为"192.125.001.090"或者"192.125.1.90"都可以正确识别。
参数说明：
    输入参数：
			[ *deviceName]:设备名字
            [ *addr     ] : IP字符串头指针，字符串长度为16*sizeof(CHAR_T)
    输出参数：
            无
返    回： 
    成功 : 0            ( 设置网络地址成功 )
    失败 : -1 或 错误码 ( 设置网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_set_IP(const CHAR_T* deviceName, const CHAR_T *addr);

/**************************************************************************
函数名称: 
            rocme_porting_get_IP
功能说明: 
            获取当前网络终端设备的IP地址字符串，符合点型"." 地址标准，如
        192.168.123.125等。
参数说明：
    输入参数：
            [ *deviceName]:设备名字
    输出参数：
            [ *addr     ] : IP字符串头指针，字符串长度为16*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取IP网络地址成功 )
    失败 : -1 或 错误码 ( 获取IP网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_IP(const CHAR_T* deviceName, CHAR_T *addr);

/**************************************************************************
函数名称: 
            rocme_porting_set_mask
功能说明: 
            设置当前网络终端设备的子网掩码地址字符串，符合点型"." 地址标准
        ，如192.168.123.125等。
        要求:字符串形式为"192.125.001.090"或者"192.125.1.90"都可以正确识别。
参数说明：
    输入参数：
			[ *deviceName]:设备名字
            [ *addr     ] : 子网掩码字符串头指针，字符串长度为16*sizeof(CHAR_T)
    输出参数：
            无
返    回： 
    成功 : 0            ( 设置mask网络地址成功 )
    失败 : -1 或 错误码 ( 设置mask网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_set_mask(const CHAR_T* deviceName, const CHAR_T *mask);

/**************************************************************************
函数名称: 
            rocme_porting_get_mask
功能说明: 
            获取当前网络终端设备的子网掩码地址字符串，符合点型"." 地址标准
        ，如192.168.123.125等。
参数说明：
    输入参数：
            [ *deviceName]:设备名字
    输出参数：
            [ *addr     ] : 子网掩码字符串头指针，字符串长度为16*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取mask网络地址成功 )
    失败 : -1 或 错误码 ( 获取mask网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_mask(const CHAR_T* deviceName, CHAR_T *mask);

/**************************************************************************
函数名称: 
            rocme_porting_set_gateway
功能说明: 
            设置当前网络终端设备的网关地址字符串，符合点型"." 地址标准，
        如192.168.123.125等。
        要求:字符串形式为"192.125.001.090"或者"192.125.1.90"都可以正确识别。
参数说明：
    输入参数：
			[ *deviceName]:设备名字
            [ *addr     ] : 网关字符串头指针，字符串长度为16*sizeof(CHAR_T)
    输出参数：
            无
返    回： 
    成功 : 0            ( 设置gateway网络地址成功 )
    失败 : -1 或 错误码 ( 设置gateway网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_set_gateway(const CHAR_T* deviceName, const CHAR_T *gateway);

/**************************************************************************
函数名称: 
            rocme_porting_get_gateway
功能说明: 
            获取当前网络终端设备的网关地址字符串，符合点型"." 地址标准
        ，如192.168.123.125等。
参数说明：
    输入参数：
           [ *deviceName]:设备名字
    输出参数：
            [ *addr     ] : 网关字符串头指针，字符串长度为16*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取gateway网络地址成功 )
    失败 : -1 或 错误码 ( 获取gateway网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_gateway(const CHAR_T* deviceName, CHAR_T *gateway);




/**************************************************************************
函数名称: 
            rocme_porting_set_dnsserver
功能说明: 
            设置协议栈的dns server IP地址
参数说明：
    输入参数：
            nIndex   : dns server 序号，目前支持0，1
    输出参数：
            addr     : IP 地址字符串，符合点型"." 地址标准，如192.168.003.005等。
返    回： 
    成功 : 0            ( 设置DNS服务器地址成功 )
    失败 : -1 或 错误码 ( 设置DNS服务器地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_set_dnsserver(INT32_T nIndex,CHAR_T *addr);


/**************************************************************************
函数名称: 
            rocme_porting_get_dnsserver
功能说明: 
            获得协议栈的dns server IP地址
参数说明：
    输入参数：
            count   : DNS  服务器序号，目前支持0，1
    输出参数：
            addr     : IP 地址字符串，符合点型"." 地址标准，如果有多个
                          DNS服务器，则中间加入间隔符/ 。
                          如"192.168.003.005" 
返    回： 
    成功 : 0            ( 设置DNS服务器地址成功 )
    失败 : -1 或 错误码 ( 设置DNS服务器地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_dnsserver(INT32_T nIndex,CHAR_T *addr);

/**************************************************************************
函数名称: 
            rocme_porting_get_DHCP_server
功能说明: 
            获取当前网络上提供 DHCP 服务的服务器 IP 地址字符串，符合点型"." 
        地址标准，如192.168.123.125等。
参数说明：
    输入参数：
            无
    输出参数：
            [ *addr     ] : DHCP服务器地址字符串头指针，字符串长度为16*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取DHCP服务器网络地址成功 )
    失败 : -1 或 错误码 ( 获取DHCP服务器网络地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_DHCP_server(CHAR_T *addr);

/**************************************************************************
函数名称: 
            rocme_porting_get_DHCP_port
功能说明: 
            获取当前网络上提供 DHCP 服务的服务器端口号。
参数说明：
    输入参数：
            无
    输出参数：
            [ port     ] : DHCP 服务的服务器端口号
返    回： 
    成功 : 0            ( 获取DHCP服务器端口号成功 )
    失败 : -1 或 错误码 ( 获取DHCP服务器端口号失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_DHCP_port(UINT16_T *port);

/**************************************************************************
函数名称: 
            rocme_porting_get_mac_address
功能说明: 
            获取当前网卡的物理MAC地址（字符串），形式必须是：
        "xx:xx:xx:xx:xx:xx" 其中x 是[0 -9 a-f]16个字符之一。
参数说明：
    输入参数：
            [ *deviceName]:设备名字
    输出参数：
            [ *mac     ] : MAC地址字符串头指针，字符串长度18*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取MAC地址成功 )
    失败 : -1 或 错误码 ( 获取MAC地址失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_mac_address(const CHAR_T* deviceName, CHAR_T *mac);

/**************************************************************************
函数名称: 
            rocme_porting_get_rom_size
功能说明: 
            获取当前产品的存储器flash大小， 字节数bytes。
参数说明：
    输入参数：
            无
    输出参数：
            [ *rom_size ] : 当前产品的存储器flash字节数
返    回： 
    成功 : 0            ( 获取flash大小成功 )
    失败 : -1 或 错误码 ( 获取flash大小失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_rom_size(UINT32_T *rom_size);

/**************************************************************************
函数名称: 
            rocme_porting_get_ram_size
功能说明: 
            获取当前产品的内存容量大小， 字节数bytes。
参数说明：
    输入参数：
            无
    输出参数：
            [ *rom_size ] : 当前产品的内存容量大小
返    回： 
    成功 : 0            ( 获取内存大小成功 )
    失败 : -1 或 错误码 ( 获取内存大小失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_ram_size(UINT32_T *ram_size);

/**************************************************************************
函数名称: 
            rocme_porting_get_product_serial
功能说明: 
           获取当前产品序列号，长度最大为32字节。
参数说明：
    输入参数：
            无
    输出参数：
            [ *product_serial ] : 当前产品序列号，最大长度32*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取产品序列号成功 )
    失败 : -1 或 错误码 ( 获取产品序列号失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_product_serial(CHAR_T *product_serial);

/**************************************************************************
函数名称: 
            rocme_porting_get_platform_info
功能说明: 
            获取当前系统的硬件平台信息，长度最大为32字节。
参数说明：
    输入参数：
            无
    输出参数：
            [ *info     ] : 当前系统的硬件平台信息，最大长度32*sizeof(CHAR_T)
返    回： 
    成功 : 0            ( 获取硬件平台信息成功 )
    失败 : -1 或 错误码 ( 获取硬件平台信息失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_platform_info(CHAR_T *info);

/**************************************************************************
函数名称: 
            rocme_porting_get_software_version
功能说明: 
            获取机顶盒软件版本号
参数说明：
    输入参数：
            无
    输出参数：
            [ *version  ] : 版本号 
返    回： 
    成功 : 0            ( 获取软件版本成功 )
    失败 : -1 或 错误码 ( 获取软件版本失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_software_version(UINT32_T *version);

/**************************************************************************
函数名称: 
            rocme_porting_get_hardware_version
功能说明: 
            获取机顶盒硬件版本号
参数说明：
    输入参数：
            无
    输出参数：
            [ *version  ] : 版本号 
返    回： 
    成功 : 0            ( 获取硬件版本成功 )
    失败 : -1 或 错误码 ( 获取硬件版本失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_hardware_version(UINT32_T *version);

/**************************************************************************
函数名称: 
            rocme_porting_get_loader_version
功能说明: 
            获取机顶盒loader版本号
参数说明：
    输入参数：
            无
    输出参数：
            [ *version  ] : 版本号 
返    回： 
    成功 : 0            ( 获取loader版本成功 )
    失败 : -1 或 错误码 ( 获取loader版本失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_loader_version(UINT32_T *version);

/**************************************************************************
函数名称: 
            rocme_porting_get_browser_version
功能说明: 
            获取浏览器版本号
参数说明：
    输入参数：
            无
    输出参数：
            [ *version ] : 版本号 
返    回： 
    成功 : 0            ( 获取浏览器版本成功 )
    失败 : -1 或 错误码 ( 获取浏览器版本失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_browser_version(UINT32_T *version);


/**************************************************************************
函数名称: 
            rocme_porting_get_stb_manufacturer
功能说明: 
            获取机顶盒提供商名称,最大40个字节
参数说明：
    输入参数：
            无
    输出参数：
            [ *manufacturer ] : 供应商名称
            [ *pbyManuID   ]: 输出生产商标识(一个byte的16进制数)
            两个参数中如果某个没有则返回NULL
返    回： 
    成功 : 0            ( 获取机顶盒供应商名称成功 )
    失败 : -1 或 错误码 ( 获取机顶盒供应商名称失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_stb_manufacturer(CHAR_T *manufacturer, UINT8_T *pbyManuID);

/**************************************************************************
函数名称: 
            rocme_porting_get_stb_model
功能说明: 
            获取机顶盒型号,最大40个字节
参数说明：
    输入参数：
            无
    输出参数：
            [ *model ] : 机顶盒型号
返    回： 
    成功 : 0            ( 获取机顶盒机顶盒型号成功 )
    失败 : -1 或 错误码 ( 获取机顶盒机顶盒型号失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_stb_model(CHAR_T *model);

/**************************************************************************
函数名称: 
            rocme_porting_get_chip_id
功能说明: 
            获取机顶盒芯片的ID编号,最大128字节
参数说明：
    输入参数：
            无
    输出参数：
            [ *chip_id ] : 机顶盒芯片的ID编号数组头指针,最大128字节

返    回： 
    成功 : 0            ( 获取机顶盒chip型号成功 )
    失败 : -1 或 错误码 ( 获取机顶盒chip型号失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_get_chip_id(UINT8_T *chip_id);

/**********************************
功能说明：
    ADSL设置
    
参数说明：
    输入参数： pppoe_config，PPPoE参数结构体
    输出参数： 
    
返    回：0 - 成功 -1 - 失败
**********************************/
INT32_T rocme_porting_adsl_setup( Roc_PPPoE_Config_t *pppoe_config );

/**********************************
功能说明：
    ADSL连接启动
    
参数说明：
    输入参数： 
    输出参数： 
    
返    回：0 - 成功 -1 - 失败
**********************************/
INT32_T rocme_porting_adsl_start(void);

/**********************************
功能说明：
    ADSL连接断开
    
参数说明：
    输入参数： 
    输出参数： 
    
返    回：0 - 成功 -1 - 失败
**********************************/
INT32_T rocme_porting_adsl_stop(void);

/**********************************
功能说明：
    ADSL连接状态查询
    
参数说明：
    输入参数： 
    输出参数： 
    
返    回：0 - 处于连接状态  -1 - 未处于连接状态
**********************************/
INT32_T rocme_porting_adsl_state(void);

/**************************************************************************
函数名称: 
            rocme_porting_ping
功能说明: 
            测试机顶盒网络状态
参数说明：
    输入参数：
            [*ip_addr] : 类型为指向字符类型变量的指针，指向内存待测IP地址的内存首地址
            [*result] : 类型为指向字符类型变量的指针，指向存放测试结果字符串的内存首地址，内存空间由此函数调用者申请，不小于256个字节

    输出参数：
            [*result] : 若函数执行成功则应将测试的结果以字符串形式存入result所指向的内存中
            测试成功应打印:
                        Recv xx byte From xxx.xxx.xxx.xxx ttl=xxx tm=xxx
            测试失败应打印:
                        Ping xxx.xxx.xxx.xxx time out

返    回： 
    成功 : 0                             ( 测试机顶盒网络状态成功 )
    失败 : -1 或 错误码 ( 测试机顶盒网络状态失败 )
修改记录：
**************************************************************************/
INT32_T rocme_porting_ping(CHAR_T *ip_addr, CHAR_T *result);

/**********************************
功能说明：
    获得机顶盒芯片类型
    
参数说明：
    输入参数： 无
    输出参数： 无
    
返    回：机顶盒芯片类型，具体参见枚举：
						typedef enum Roc_CHIP_TYPE
						{
						    ROC_CHIP_ST_5105    = 0x00, 
						    ROC_CHIP_ST_5197    = 0x01, 
						    ROC_CHIP_ST_7105    = 0x02, 
						    ROC_CHIP_ST_7162    = 0x03, 
						    ROC_CHIP_ST_7167    = 0x04, 
						    ROC_CHIP_ST_7141    = 0x05, 
						    ROC_CHIP_ST_7108    = 0x06,
						
						    ROC_CHIP_BCM_7403   = 0x100,
						    ROC_CHIP_BCM_7405   = 0x101,
						    ROC_CHIP_BCM_7413   = 0x102,
						    ROC_CHIP_BCM_7019   = 0x103,
						
						    ROC_CHIP_HISI_3110E = 0x200,
						
						    ROC_CHIP_NEC_61325  = 0x300
						}Roc_CHIP_TYPE_e;

**********************************/
UINT32_T rocme_porting_get_chip_type(void);

/**************************************************************************
函数名称: 
            rocme_porting_get_portal_url

功能说明: 
            获取机顶盒通过DHCP得到的服务器配置信息

参数说明：
    输出参数：
            [ *purl ] : 配置文件,最大256个字节，以"\0"结束。

返    回： 
    成功 : 0
    失败 : -1 或 错误码

备注:
    广东省网通过DHCP中的Option字段来实现获取portal服务器信息。
    机顶盒在开机启动后必须先完成DHCP,并获取其中的cscfg数据，并保存。
    中间件会通过此接口来获取cscfg。
    配置文件示例:
    cscfg :URL=http://10.10.20.123/stb/configs/netwok.cfg&cfgmd5=E781FD
**************************************************************************/
INT32_T rocme_porting_get_portal_url(CHAR_T *purl);

#ifdef __cplusplus
}
#endif

#endif
