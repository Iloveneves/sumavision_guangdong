//------------------------------------------------------------------------
// Copyright (c) 2001, TIARTOP
// All rights reserved.
// 
// 文件名称：flash.h
// 
// 摘    要：flash driver package
// 
// 当前版本：1.0
//
// 作    者：luzhiliang
//
// 创建日期：2004年11月27日
//
// 说    明: FLASH驱动层封装(对NEC驱动修改或封装)
//------------------------------------------------------------------------

#ifndef _TDRV_FLASH_H_
#define _TDRV_FLASH_H_



#ifdef __cplusplus
extern "C"
{
#endif //__cplusplus



typedef enum 
{
	TDRV_FLASH_OK,
	TDRV_FLASH_FAIL,
	TDRV_FLASH_ALREADY_INITIALIZED,
	TDRV_FLASH_NOT_INITIALIZED,
	TDRV_FLASH_SEMAPHORE_FAIL,
	TDRV_FLASH_READ_FAIL,
	TDRV_FLASH_WRITE_FAIL,
	TDRV_FLASH_ERASE_FAIL
} TDRV_FLASH_RESULT;

extern 	TDRV_FLASH_RESULT 	g_nFlashDrvLastError;
//------------------------------------------------------------------------
//	初始化Flash驱动(TRUE/FLASE)
//------------------------------------------------------------------------
int TDRV_FLASH_Initialize(void);

//------------------------------------------------------------------------
//	释放Flash驱动(TRUE/FLASE)
//------------------------------------------------------------------------
int TDRV_FLASH_Finalize(void);

//------------------------------------------------------------------------
//	擦写指定位置的扇区
//------------------------------------------------------------------------
// 	uAddr	扇区首地址
//	返回	操作是否成功(TRUE/FLASE)
//------------------------------------------------------------------------
int TDRV_FLASH_Erase(unsigned int uAddr);
int TDRV_FLASH_EraseEx(unsigned int uAddr, int uSize);

//------------------------------------------------------------------------
//	从Flash读取数据
//------------------------------------------------------------------------
//	uAddr	Flash地址
//	uSize	缓冲大小
//	pBuffer	读缓冲
//	返回	读到的字节数
//------------------------------------------------------------------------
int TDRV_FLASH_Read(unsigned int uAddr, unsigned int uSize, unsigned char * pBuffer);

//------------------------------------------------------------------------
//	向Flash写数据
//------------------------------------------------------------------------
//	uAddr	Flash地址
//	pData	待写数据
//	uSize	数据大小
//	返回	成功写进的大小
//------------------------------------------------------------------------
int TDRV_FLASH_Write(unsigned int uAddr, unsigned int uSize, unsigned char * pData);
int TDRV_FLASH_WriteEx(unsigned int uAddr, unsigned int uSize, unsigned char * pData);





////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// I2C 总线操作函数
//
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////





//------------------------------------------------------------------------
//	向 I2C总线 写数据 （双地址模式）
//------------------------------------------------------------------------
//	bDeviceAddr		设备地址
//	bSubDeviceAddr	子设备地址
//	pData			待写数据
//	nCount			数据长度
//	返回	操作成功返回TRUE，失败返回FALSE
//------------------------------------------------------------------------
int TDRV_I2C_Write(unsigned char bDeviceAddr, unsigned char bSubDeviceAddr ,
					unsigned char* pData, unsigned char nCount );



//------------------------------------------------------------------------
//	向 I2C总线 读数据 （双地址模式）
//------------------------------------------------------------------------
//	bDeviceAddr		设备地址
//	bSubDeviceAddr	子设备地址
//	pData			保存读出的数据的缓冲区
//	nCount			要读出的数据的长度
//	返回	操作成功返回TRUE，失败返回FALSE
//------------------------------------------------------------------------
int TDRV_I2C_Read(unsigned char bDeviceAddr, unsigned char bSubDeviceAddr ,
				   unsigned char* pData, unsigned char nCount );



//------------------------------------------------------------------------
//	向 I2C总线 写数据 （单地址模式）
//------------------------------------------------------------------------
//	bDeviceAddr		设备地址
//	pData			待写数据
//	nCount			数据长度
//	返回	操作成功返回TRUE，失败返回FALSE
//------------------------------------------------------------------------
int TDRV_I2C_Write_OneAddr(unsigned char bDeviceAddr ,
							unsigned char* pData, unsigned char nCount );



//------------------------------------------------------------------------
//	向 I2C总线 读数据 （单地址模式）
//------------------------------------------------------------------------
//	bDeviceAddr		设备地址
//	pData			保存读出的数据的缓冲区
//	nCount			要读出的数据的长度
//	返回	操作成功返回TRUE，失败返回FALSE
//------------------------------------------------------------------------
int TDRV_I2C_Read_OneAddr(	unsigned char bDeviceAddr ,
							unsigned char* pData, unsigned char nCount );



#ifdef __cplusplus
}
#endif //__cplusplus



#endif
